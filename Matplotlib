It is a python library that helps in visual representation of this data from numpy and pandas
matplotlib.pyplot -> python's equivalent to MATLAB

plt.plot() -> creates the canvas/figure for the plot(graph)

GENERAL WORKFLOW OF MATPLOTLIB
#0. import matplotlib and get it ready for ploting jupyter
%matplotlib inline
import matplotlib.pyplot as plt
#1. Prepare data
x = [1,2,3,4]
y = [11,22,33,44]

#2. setup plot
fig, ax = plt.subplots(figsize=(10,10)) # height and width of plot

#3 plot the data
ax.plot(x, y)

#4. customise the plot
ax.set(title="Simple Plot",
       xlabel="x-axis",
       ylabel="y axis")

#4. save and share
fig.savefig("Numpy Images/sample-plot.png")

types of plots in Matplotlib.pyplot -> line, scatter(dot), bar, histogram, subplots

ax is the axes for the figure made using plt.subplots()
for scatter plot -> ax.scatter() -> various attributes
for bar plot -> ax.bar() first arg is the values for x axis and 2nd arg is for height against each value on x axis
for horizontal bar plot -> ax.barh() -> y and width as mandatory arg, sent as list
for histograms-> ax.hist()
for subplots (ie more than one plots at a time) -> 
       There are two ways to subplot
              1) Plotting various subplots as fig ((ax1, ax2), (ax3, ax4)) = plt.subplots(nrows=2, ncols=2) -> this will create 4 plots within a figure
                     we can change the number of plots according to our wish by changing the nrows, ncols values and no. of axes
              2) liost index, we assign the whole subplots to a variable ax and access different plots as we access a list element - see in jupyter notebook

MatplotLib and Pandas
Pandas has itself some function of matplotlib like plot
Pandas plot()
-> takes mainly three arguments
1) x ie x axis data
2) y ie y axis data
3) kind  ie the type of plot, line, scatter, hist, bar, etc by default line plot

df.plot.bar() -> creates the bar graph for the dataframe
similarly for other plots as well

BAR GRAPH vs HISTOGRAM
Bar -> used to compare discrete or categorical variables in a graphical format
Histogram -> used to plot the frequency distribution of the variable set follows normal distrbution

Pyplot vs matplotlib OO method -> which one to use to plot
ideally OO is preferred over pyplot

However ❤️
-> when plotting something quickly, OKAY to USE PYPLOT
-> when plotting something more advanced, use OO method

       
